{
  "init": {
	"name": "A.V.A.T.A.R Client",
	"newTitle": "Welcome to the new client!",
	"newSubTile": "Enter information to start the client"
  },
  "mainInterface": {
	"quit": "A.V.A.T.A.R Client",
	"quitAsk": "Do you really want to quit?",
	"buttonYes": "Yes",
	"buttonNo": "No",
	"initTTS": "Initializing the speech synthesis...",
	"initListen": "Initializing the listening module...",
	"startBy": "Starts Chrome...",
	"timeoutConnexion": "Chrome response timeouts reached. Consult the documentation to solve the problem!",	
	"restartConnexion": "No response from the listener, waiting for Chrome ($$/10)...",
	"openByError": "Chrome startup error: $$",
	"secureConnect": "Creating a secure connection for Chrome...",
	"secureConnectError": "Secure connection error with Chrome: $$",
	"startReconizer": "Starts listening...",
	"httpClient": "$$ listens on HTTP port $$",
	"networkScan": "Attempts to connect to A.V.A.T.A.R server....",
	"networkScanError": "A.V.A.T.A.R. server search error: $$",
	"multiAppError": "An application uses the same HTTP port $$ chosen for A.V.A.T.A.R. Consult the documentation to solve the problem!",
	"retryNetworkScan": "No A.V.A.T.A.R server on the network. New search in $$ secs...",
	"interruptConnection": "The connection to the A.V.A.T.A.R server is down!",
	"restartConnection": "Restarts connection...",
	"connected": "Connected to the A.V.A.T.A.R server!",
	"wifiScanError": "Wifi scan error: $$",
	"soundex": "Close-up understanding: $$",
	"intent": "==> $$",
	"sendIntentRule": "Sends rule to A.V.A.T.A.R server...",
	"recognizerStarted": "Speech recognizer started!",
	"readyToListen": "Ready to listen!",
	"ReadyToListenAskMe": "Ready to listen in askMe mode!",
	"granted": "Microphone permission: $$",
	"log": "Remote log ==> $$",
	"startNavigatorError": "Google Chrome error: Check https certificates or consult the documentation.",
	"stopListen": "Stops listening...",
	"stopListenSpeak": "Speak received, stops listening...",
	"startListenSpeak": "Speech terminated, reactivates listening...",
	"listenStopped": "Listening disabled!",
	"listenStarted": "Listening reactivated!",
	"listenCanceled": "Listening stopped!",
	"notiftitle":"A.V.A.T.A.R Message",
	"notifmessage":"Application runtime settings have changed.<br>Do you want to restart the A.V.A.T.A.R client now (recommended)?",
	"restart": "Restart",
	"later": "Later",
	"visualizerMsgStart": "Youâ€™ve been in noisy environment since",
	"visualizerMsgEnd": "secondes",
	"visualizerError": "Access to the microphone was denied:",
	"timeoutSpeech": "No rule. Listening times reached...",
	"bufferEmpty": "No rule understood...",
	"autoRestart": "Automatic restart every $$ hours and $$ minutes",
	"voiceChanged": "done",
	"largeFont": "Enlarge console font",
	"lessFont": "Reduce console font",
	"copyConsoleMsg": "Copy console",
	"delConsole": "Delete console",
	"emptyConsole": "Empty console, no copy",
	"copyConsole": "Console copied to the clipboard!",
	"errorConsole": "Copy console error",
	"ttsError": "The TTS is missing!",
	"runAppError": "Application runtime error: $$",
	"runApp": "Runs the $$ application",
	"errorMenu": "Unable to show the contextual menu",
	"noFeatures": "No voice service found. Choose local voices as voice preference in properties.",
	"notInitialized": "Voice service could not be initialized",
	"noinit": "Chrome: No remote voices available, choose 'Local voices' in properties",
	"notStarted": "The client did not start correctly. Restart in 60 seconds",
	"noCertificates": "HTTPS certificate missing. Open the documentation to follow the creation of a certificate",
	"noChromeProperties": "The HTTPS certificate properties are missing. Open Plugin Studio and add them to Chrome properties",
	"errorHTTPServer": "Activate the client's HTTP communication port to display the documentation",
	"newVersion": "New version available!",
	"noScreenSaver": "Unable to start the screensaver: $$"
  },
  "script": {
	"callError": "Impossible to find the plugin $$",
	"callNextError": "$$: $$",
	"runError": "The plugin name is missing"
  },
  "config": {
	"errorReloadproperties": "Reloading $$ plugin error: $$",
	"loadProperties": "Error while loading properties",
	"reloadproperties": "Reloading $$ plugin properties",
	"errorProperty": "There is a difference between the file names for the $$ plugin: the directory, module and properties file names must be identical. Correct the problem.",
	"errorLoadProperty": "$$ plugin load error: $$", 
	"errorCustomProperty": "Error in $$ properties file: $$",
    "skipConfig": "Skip config: $$",
	"propertySaved": "Properties successfully saved",
	"errorPropertySaved": "Error saving properties: $$"
  },
  "plugin": {
    "notExist": "$$ plugin does not exist",
	"removed": "$$ plugin disabled",
	"initModule": "Initializing the init function of the $$ plugin",
	"initSubclassPlay": "Initializing the subclassPlay function of the $$ plugin",
	"initSubclassSpeak":  "Initializing the subclassSpeak function of the $$ plugin",
	"reloaded": "Reloading $$ plugin",
	"loadingPlugin": "$$ plugin loading error:",
	"removePlugin": "Removing the $$ plugin",
	"from": "from",
	"to": "to",
	"listenError": "Listen error: The callback function is not defined",
	"add": "Loading the $$ plugin"
  },
  "cron": {
	"start": "Start a new $$ job planned at $$",
	"startError": "$$ plugin: Missing cron time table"
  },
  "settings": {
	"wintitle": "Application settings",
	"settings": "Settings",
	"dialog": "Dialog",
	"verbose": "Display all information in the console",
	"lang": "Application language:",
	"auto": "By default",
	"http": "Server communication port (HTTP):",
	"udp": "Server search port (UDP):",
	"udpRestart": "Delay in seconds between server searches:",
	"httpclient": "Client communication port (HTTP):",
	"httpclientRoute": "Client communication route (HTTP):",
	"client": "Client name:",
	"server": "Server search range:",
	"restart": "Number of automatic client restarts per 24h:",
	"update": "Check for updates at startup",
	"screensaver": "Screensaver:",
	"selectscreensaver": "Select...",
	"screensavertimer": "Execution time in seconds after client initialization:",
	"noName": "Enter a name for the client",
	"noIP": "Enter a search range or directly the IP address of the A.V.A.T.A.R server.<br>Example: $$ or $$",
	"exClient": "e.g. Living room",
	"test": "Test in the interface",
	"saveproperties": "Save",
	"quit": "Exit",
	"saved": "The settings have been saved!",
	"AKALabel": "Enter the keywords that trigger the listening:",
	"AKASeparatorLabel": "Enter the separator words to pass several actions in the same sentence:",
	"AKARestartLabel": "Enter sentences to allow you to unlock the listening if it no longer responds (Listening not restored after a speak, etc...):",
	"serverSpeak": "Client dialogs are redirected to Wifi speakers managed by a plugin",
	"serverSpeakModule": "Redirection plugin:",
	"loopMode": "Loop mode: The dialog loops after each rule execution",
	"recognizeLang": "Dialog language:",
	"recognizerType": "Voice recognition module:",
	"listenLabel": "Listening delay before automatic stop:",
	"speakLabel": "Time delay before and after client speak:",
	"voiceType": "Voice preference:",
	"webVoice": "Remote voices",
	"localVoice": "Local voices",
	"voice": "Current voice:",
	"activeVoices": "List of voices selected for the client (Can also be used with the 'Change voice' rule):",
	"availableVoices": "List of available voices:",
	"voiceTab": "Voices",
	"testVoice": "Test",
	"addVoice": "Select",
	"addCurrentVoice": "Define Current",
	"volumeVoice": "Voice volume:",
	"speedVoice": "Voice speed:",
	"pitchVoice": "Voice pitch:",
	"veryLowVolumeVoice": "Very low",
	"lowVolumeVoice": "Low",
	"normalVolumeVoice": "Normal",
	"slowSpeedVoice": "Slow",
	"normalSpeedVoice": "Normal",
	"fastSpeedVoice": "Fast",
	"deepPitchVoice": "Deep",
	"normalPitchVoice": "Normal",
	"hightPitchVoice": "High ",
	"testTextVoice": "Test sentence:",
	"testSentenceVoice": "this voice suits me. right ?",
	"voiceTestError": "You cannot test a voice before the application has been fully initialized. Run the test again later.",
	"testVoiceInfo": "Voice test...",
	"changeVoice": "Voice ruler to change voices (loop on selected voices):",
	"rulesTab": "Rules",
	"backgroundTab": "Background",
	"backgroundtitle": "Select a background image",
	"screensavertitle": "Select a screensaver",
	"voiceChangeEx": "change your voice",
	"titleRules": "What you can say...",
	"titleAnswer": "What the client says...",
	"thxRuleLabel": "When you want to end the dialog in loop mode:",
	"stopRuleLabel": "When you want to stop the dialog after a false positive:",
	"listenAnswerLabel": "When listening is triggered by the keyword:",
	"listenAgainAnswerLabel": "When the client asks you for another rule (in loop mode):",
	"askmeAgainAnswerLabel": "When the client asks you to repeat an askme (question/answer):",
	"thxAnswerLabel": "When you have ended the dialogue in loop mode:",
	"stopAnswerLabel": "When you have stopped the dialogue after a false positive:",
	"selectimage": "Select",
	"nodesTab" : "Interface",
	"intercomTab": "Intercom",
	"shapeStartLabel": "Display a frame",
	"shapeTypeLabel": "Frame type:",
	"widthShapeLabel": "Frame width:",
	"heightShapeLabel": "Frame height:",
	"thicknessShapeLabel": "Frame thickness:",
	"opacityShapeLabel": "Frame opacity:",
	"colorShapeLabel": "Frame color:",
	"sizeTextLabel": "Text size:",
	"colorTextLabel": "Text color:",
	"sizeOutlineTextLabel": "Text outline size:",
	"colorOutlineTextLabel": "Text outline color:",
	"shapeTitle": "Frame and text of the client name",
	"consoleTitle": "Console parameters",
	"consoleColor": "Console frame color:",
	"consoleBackgroundColor": "Console background color:",
	"consoleOpacity": "Console opacity:",
	"consoleTxtBold": "Font bold",
	"consoleTxtColor": "Information font color:",
	"clientError": "The client name is missing. Correct the problem before continuing",
	"adressError": "The search range is missing. Correct the problem before continuing",
	"httpError": "The communication port with the server is missing. Correct the problem before continuing",
	"udpError": "The UDP search port is missing, correct the problem before continuing",
	"httpClientError": "The HTTP port for the client is missing. Correct the problem before continuing",
	"httpClientRouteError": "The HTTP route for the client is missing. Correct the problem before continuing",
	"httpClientRouteSpaceError": "HTTP client route must not contain spaces or special characters. Correct the problem before continuing",
	"AKAError": "Enter at least one trigger keyword for listening, correct the problem before continuing",
	"askmeError": "Enter at least one sentence for the client when he doesn't understand your rule during an askme (question/answer)",
	"thxRuleError": "In loop mode, you must define at least one phrase to stop the dialog loop. Correct the problem before continuing",
	"listenAnswerError": "In loop mode, you need to define at least one phrase for the client when listening is triggered. Correct the problem before continuing",
	"listenAgainAnswerError": "In loop mode, you need to define at least one sentence for the client when he asks you for another rule. Correct the problem before continuing",
	"thxAnswerError": "In loop mode, you need to define at least one phrase for the client when he thanks you to stop the dialog. Correct the problem before continuing",
	"recognizerTypeError": "Enter a speech recognition module (by default 'chrome'), correct the problem before continuing.",
	"nohttp": "Enter a communication port (same as server configuration)",
	"noudp": "Enter a search port (same as server configuration)",
	"consoleBorder": "Display a border",
	"consoleHeader": "Show management buttons",
	"consoleTxtOpacity": "Make text background transparent",
	"visualizerTitle": "Visualizer",
	"visualizerLoud": "Loud volume threshold:",
	"visualizerLoudTxt": "Display loud volume warning",
	"visualizerLoudColor": "Warning text color:",
	"screensavertimerOnoff": "Enable screensaver",
	"activateIntercom": "Enter intercom triggering rules for a room (room is a variable):",
	"activateIntercomInfo": "For example: the rule '<i><b>Intercom with Living room</b></i>' gives the keyword '<i><b>Intercom with</b></i>'.",
	"activateGlobalIntercom": "Enter the rules for triggering the general intercom (All rooms):",
	"answerIntercom": "Enter the client's answer to let you know that the intercom is ready to record:",
	"answerError": "Enter at least one phrase for the client to let you know that the intercom is ready to record!",
	"sendIntercom": "Enter the sentence the client says to let you know that the message has been sent:",
	"globalError": "Enter at least one rule to trigger the general intercom!",
	"speechModuleError": "Enter the plugin to redirect dialogs",
	"sendError": "Enter at least one phrase for the client to let you know that the message has been sent!",
	"silenceIntercom": "Duration of the silence to stop the intercom:",
	"thresholdStart": "Silence threshold to start recording:",
	"thresholdStop": "Silence threshold to stop recording:",
	"driverIntercom": "Recording driver to use (waveaudio by default):",
	"deviceIntercom": "Recording device to use:",
	"exdriverIntercom": "waveaudio",
	"exdeviceIntercom": "default",
	"labelInfoIntercom": "Display more information (debug mode)",
	"remove": "Delete $$",
	"removeall": "Remove all",
	"sameItem": "Unable to select this rule.<br>It exists in another list in another tab.<br>You can delete the entire list or slightly modify this rule to be able to select it."
  },
  "menu": {
	"interface": "Interface",
	"listening": "Activate listening",
	"desactiveListening": "Disable listening",
	"startListening": "Start listening",
	"stopListening": "Stop listening",
	"property": "Settings",
	"console": "Show/Hide Console",
	"visualizer": "Show/Hide Visualizer",
	"minimize": "Minimize window",
	"fullscreen": "Toggle full screen/window",
	"restart": "Restart",
	"quit": "Quit",
	"pluginStudio": "Plugin Studio",
	"edition": "Edition",
	"vsCode": "Visual Studio Code",
	"documentation": "Documentation"
  },
  "intercom": {
	"command": "Intercom: Command $$ $$",
	"active": "Intercom already active, killed old one started new intercom.",
	"start": "Intercom: Started recording",
	"error": "Intercom error: $$",
	"defaultError": "Unable to start recording",
	"stopError": "No intercom active",
	"stop": "Intercom: Stopped recording.",
	"done": "Intercom: Recording complete",
	"recordError": "Sorry, there was an error recording the message",
	"error": "Intercom error: $$",
	"play": "Intercom reÃ§u de $$"
  },
  "functionLibrairy": {
	"getSecond": "SINCE $$ SEC",
	"getMinute": "SINCE $$ MIN",
	"getHour": "SINCE $$ HOURS",
	"getDay": "SINCE $$ DAYS",
	"getMonth": "SINCE $$ MONTHS",
	"samePeriphName": " and ",
	"getImageError": "Search error for $$ Widget image"
  },
  "pluginWidgets": {
	"searchWidgetError": "Search Error for Plugins Widgets: $$",
	"refreshWidgetError": "Cannot refresh widget information: $$",
	"actionWidgetError": "Action for $$ plugin failed: $$",
	"getValueWidgetError": "The device value was not found!"
  },
  "pluginStudio": {
	"wintitle": "Plugin Studio",
	"openClose": "Plugins",
	"info": "Information",
	"properties": "Properties",
	"pluginTitle": "Click a plugin",
	"pluginSubtitle": "Another click for its menu",
	"disabled": "Disabled",
	"pluginReloaded": "$$ plugin properties reloaded!",
	"pluginRemoved": "$$ plugin moved to recycle bin!",
	"pluginActivated": "activated!",
	"pluginDesactivated": "disabled!",
	"plugin": "$$ plugin",
	"pluginPropertySaved": "$$ plugin properties saved!",
	"pluginPropertyNoSaved": "The $$ plugin properties have not changed, no save!",
	"pluginCreated": "$$ plugin created!",
	"defaultImage": "By default",
	"noDescription": "No description",
	"winDeleteTitle": "Delete plugin",
	"winDeleteMsg": "Do you really want to delete the $$ plugin?",
	"winDeleteDetail": "You delete the folder:\n$$",
	"winDeleteOk": "Delete",
	"winDeleteCancel": "Cancel",
	"saveWinTitle": "Save plugin properties",
	"saveWinMsg": "The properties of the $$ plugin have changed, do you want to save them?",
	"saveWinDetail": "Your changes will be lost if you open another property file without saving.",
	"saveWin": "Save",
	"noSaveWin": "Do not save"
  },
  "pluginStudioMenu": {
	"activeLabel": "Activate",
	"disableLabel": "Desactivate",
	"reload": "Reload",
	"delete": "Delete",
	"documentation": "Documentation",
	"startError": "The start property is missing from the plugin's documentation.ini file.",
	"fileError": "The documentation.ini file is missing from the plugin documentation.",
	"save": "Save"
  },
  "encrypt": {
	"wintitle": "Encrypt/Decrypt",
	"parameter": "Setting",
	"exit": "Close",
	"encryptError": "Encrypt error: $$",
	"decryptError": "DÃ©crypt error: $$",
	"error": "No value returned",
	"saveEncrytPasswd": "Password saved!",
	"saveEncrytPasswdError": "Unable to save the password",
	"verifPasswdError": "Invalid Password!",
	"deleteEncrytPasswd": "Password removed!",
	"deleteEncrytPasswdError": "Unable to remove the password",
	"password": "Password:",
	"validPassword": "Validate",
	"decryptValue": "Decrypted string:",
	"cryptValue": "Encrypted string:",
	"encrytButton": "Encrypt",
	"decryptButton": "Decrypt",
	"createPasswd": "Enter a password to secure encryption and decryption of string:",
	"deletePasswd": "Delete the existing password",
	"savePasswd": "Save"
  },
  "backupRestore" : {
	"wintitle": "Backup/Restore",
	"backup": "Backup",
	"delete": "Restaure default",
	"restore": "Restore a backup",
	"backupPropertiesLabel": "Properties file",
	"backupInterfaceLabel": "Interface properties file",
	"backupNodesLabel": "Nodes properties file",
	"backupGithubLabel": "Github login file",
	"backupPluginLabel": "Plugins",
	"deletePropertiesLabel": "Restore default properties",
	"deleteInterfaceLabel": "Restore default interface properties",
	"deleteNodesLabel": "Remove interface properties from client nodes",
	"deleteGithubLabel": "Delete Github auto-login backup",
	"restorePropertiesLabel": "Properties file",
	"restoreInterfaceLabel": "Interface properties file",
	"restoreNodesLabel": "Nodes properties file",
	"restoreGithubLabel": "Github login file",
	"folderRestoreLabel": "Restore folder:",
	"folderBackupLabel": "Backup folder:",
	"folderLabel": "Select",
	"restorePluginLabel": "Plugins",
	"quit": "Quit",
	"backupDone": "Backup complete!",
	"restoreDone": "Restore complete!",
	"restoreDefaultDone": "Default restoration complete!",
	"backupError": "Backup error: $$",
	"restoreError": "Restore error: $$",
	"restoreDefaultError": "Default restore error: $$",
	"selectFolder": "Select a folder!",
	"startBackup": "Start selected backup, please wait...",
	"startRestore": "Start selected restore, please wait...",
	"startDefaultRestore": "Start selected default restore, please wait..."
  },
  "github": {
	"newVersion": "Erreur de recherche de nouvelle version: $$"
  }
}